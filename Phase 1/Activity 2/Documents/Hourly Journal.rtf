{\rtf1\ansi\ansicpg1252\cocoartf1265
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10400\viewh16220\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Immediatelly after including the library commj (the project) the project becomes useless, and there is no error or warning message that tells something. \
\
I needed the help of the developer of the library to advance, the I came to know that the library has its own Encoder and Message classes and I must use them for the application.\
\
changes in the client and in the server were needed. In order to allow the Message and the Encoder objects work properly (a casting was needed), small change.\
\
\
so far I learned the steps are:\
\
- include the libraries\
- include project commj\
- remove Message and Encoder classes\
- begin implementing the aspects\
\
Once the small change was done, implementation of the performance feature was directly related to the design of the State Machine in the client_SM class and the inclusion of the client in the initialization file. Then, small changes were needed in the Commj Aspect. i.e. is very reusable. taking the performance aspect from edit-distance to ftp was straight forward.\
\
}